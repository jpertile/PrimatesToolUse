---
title: "Tool Use Analysis"
author: "Jonathan Pertile"
format: pdf
editor: visual
---

```{r}
#load packages
library(tidyverse)
library(tidymodels)
library(knitr)
library(ape)
library(caper)
library(phytools)
library(nlme)
library(gee)
library(TreeTools)
library(patchwork)
library(phylolm)
library(broom)
library(readxl)
library(rms)
library(MuMIn)
library(kableExtra)

#load data and phylogenetic tree
tool_use_expanded <- read_xlsx("PrimateToolUseDataset.xlsx", sheet = "Dataset")
tooluse.tree <- read.nexus("ToolUsePhylo54.nex")
```



```{r}
#this ensures that phylogeny and data have species in the same order
species <- tibble(TipLabels(tooluse.tree, single = TRUE)) |> 
  rename("Species" = 1)

tool_use_expanded2 <- merge(species, tool_use_expanded, sort = FALSE)

#this turns dummy variables into factors
tool_use_expanded2$Omnivore <- as.factor(tool_use_expanded2$Omnivore)
tool_use_expanded2$Folivore <- as.factor(tool_use_expanded2$Folivore)
tool_use_expanded2$Frugivore <- as.factor(tool_use_expanded2$Frugivore)
```


```{r}
row.names(tool_use_expanded2) <- tool_use_expanded2$Species
rownames(tool_use_expanded2) == tooluse.tree$tip.label
#row names in the database matchup with tree tip labels ??
```


```{r}
set.seed(1)
global_model <- phyloglm(Tool_Use ~ log(Brain_Weight_grams, 2) +
               log(Group_Size, 2) + Extractive_Foraging + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, #the limit had been reached 
         log.alpha.bound = 8) #increased so alpha doesn't reach bound

summary(global_model)
```
```{r}
vif(global_model)
```


```{r}
#making modelitos
set.seed(1)

#removing 1 category
modelito2 <- phyloglm(Tool_Use ~ 
               log(Group_Size, 2) + Extractive_Foraging + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito3 <- phyloglm(Tool_Use ~  log(Brain_Weight_grams, 2) +
              Extractive_Foraging + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito4 <- phyloglm(Tool_Use ~  log(Brain_Weight_grams, 2) +
               log(Group_Size, 2) + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito5 <- phyloglm(Tool_Use ~  log(Brain_Weight_grams, 2) +
               log(Group_Size, 2) + Extractive_Foraging,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

#removing 2 categories
modelito6 <- phyloglm(Tool_Use ~ Extractive_Foraging + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito7 <- phyloglm(Tool_Use ~
               log(Group_Size, 2) + Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito8 <- phyloglm(Tool_Use ~  
               log(Group_Size, 2) + Extractive_Foraging,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito9 <- phyloglm(Tool_Use ~  log(Brain_Weight_grams, 2) +
              Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito10 <- phyloglm(Tool_Use ~ log(Brain_Weight_grams, 2) +
                Extractive_Foraging,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito11 <- phyloglm(Tool_Use ~ log(Brain_Weight_grams, 2) +
               log(Group_Size, 2),
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

#removing 3 categories
modelito12 <- phyloglm(Tool_Use ~ Dexterity_Index,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito13 <- phyloglm(Tool_Use ~ Extractive_Foraging,
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito14 <- phyloglm(Tool_Use ~ log(Group_Size, 2),
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 

modelito15 <- phyloglm(Tool_Use ~ log(Brain_Weight_grams, 2),
         data = tool_use_expanded2, 
         phy = tooluse.tree, 
         method = c("logistic_IG10"),
         btol = 20, 
         log.alpha.bound = 8) 
```

```{r}
aic_table <- rbind(global_model$aic) |>
  rbind(modelito2$aic) |> 
  rbind(modelito3$aic) |>
  rbind(modelito4$aic) |>
  rbind(modelito5$aic) |>
  rbind(modelito6$aic) |>
  rbind(modelito7$aic) |>
  rbind(modelito8$aic) |>
  rbind(modelito9$aic) |>
  rbind(modelito10$aic) |>
  rbind(modelito11$aic) |>
  rbind(modelito12$aic) |>
  rbind(modelito13$aic) |>
  rbind(modelito14$aic) |>
  rbind(modelito15$aic)

modelito_aics <- cbind(tibble(1:15), "AIC" = aic_table) |>
  rename("modelito_number" = 1)

```

```{r}
modelito_aics[order(modelito_aics$AIC),]
```

```{r}
aics <- modelito_aics[order(modelito_aics$AIC),]
for(i in 1:dim(aics)[1]){
aics$diff[i] <- aics$AIC[i]-aics$AIC[1]}

aics$wi <- exp(-0.5*aics$diff)

aics$aic.weights <- aics$wi/sum(aics$wi) 
aics <- aics |> dplyr::select(-4)

kable(aics, digits = 4)
```

```{r}
summing_aic.w <- aics |> filter(diff < 2) 

sum(summing_aic.w$aic.weights)
```
The top 12 models produce a summed aic weight above 0.95, so we will reject modelitos 2, 8, and 12. However, there is no aic weight above 0.9, so we will average our models using a global model average.

```{r}
modelito1 <- global_model
```

```{r}
BW_avg <- coefficients(modelito1)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 1)$aic.weight +
  coefficients(modelito3)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 3)$aic.weight +
  coefficients(modelito4)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 4)$aic.weight +
  coefficients(modelito5)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 5)$aic.weight +
  coefficients(modelito9)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 9)$aic.weight +
  coefficients(modelito10)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 10)$aic.weight +
  coefficients(modelito11)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 11)$aic.weight +
  coefficients(modelito15)[["log(Brain_Weight_grams, 2)"]]*filter(aics, 
                         modelito_number == 15)$aic.weight
```
```{r}
GS_avg <- coefficients(modelito1)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 1)$aic.weight +
  coefficients(modelito2)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 2)$aic.weight +
  coefficients(modelito4)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 4)$aic.weight +
  coefficients(modelito5)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 5)$aic.weight +
  coefficients(modelito7)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 7)$aic.weight +
  coefficients(modelito8)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 8)$aic.weight +
  coefficients(modelito11)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 11)$aic.weight +
  coefficients(modelito14)[["log(Group_Size, 2)"]]*filter(aics, 
                         modelito_number == 14)$aic.weight
```

```{r}
EF_avg <- coefficients(modelito1)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 1)$aic.weight +
  coefficients(modelito2)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 2)$aic.weight +
  coefficients(modelito3)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 3)$aic.weight +
  coefficients(modelito5)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 5)$aic.weight +
  coefficients(modelito6)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 6)$aic.weight +
  coefficients(modelito8)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 8)$aic.weight +
  coefficients(modelito10)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 10)$aic.weight +
  coefficients(modelito13)[["Extractive_Foraging"]]*filter(aics, 
                         modelito_number == 2)$aic.weight
```

```{r}
DI_avg <- coefficients(modelito1)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 1)$aic.weight +
  coefficients(modelito2)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 2)$aic.weight +
  coefficients(modelito3)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 3)$aic.weight +
  coefficients(modelito4)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 4)$aic.weight +
  coefficients(modelito6)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 6)$aic.weight +
  coefficients(modelito7)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 7)$aic.weight +
  coefficients(modelito9)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 9)$aic.weight +
  coefficients(modelito12)[["Dexterity_Index"]]*filter(aics, 
                         modelito_number == 12)$aic.weight 
```

```{r}
variables <- tibble(c("log(Brain_Weight_grams, 2)", "log(Group_Size, 2)",
  "Extractive_Foraging", "Dexterity_Index"))

estimates <- tibble(BW_avg) |> rbind(GS_avg) |> rbind(EF_avg) |> rbind(DI_avg) |>
  rename(Weighted_Estimate = BW_avg) 

Weighted_Model_pre <- variables |> cbind(estimates) |> rename(
  Variable = 1
)
```

```{r}
#calculate sum of weights for variables

BW_p <- filter(aics, modelito_number == 1)$aic.weight +filter(aics, 
                         modelito_number == 3)$aic.weight + filter(aics, 
                         modelito_number == 4)$aic.weight + filter(aics, 
                         modelito_number == 5)$aic.weight + filter(aics, 
                         modelito_number == 9)$aic.weight + filter(aics, 
                         modelito_number == 10)$aic.weight + filter(aics, 
                         modelito_number == 11)$aic.weight + filter(aics, 
                         modelito_number == 15)$aic.weight

GS_p <- filter(aics, modelito_number == 1)$aic.weight +filter(aics, 
                         modelito_number == 2)$aic.weight + filter(aics, 
                         modelito_number == 4)$aic.weight + filter(aics, 
                         modelito_number == 5)$aic.weight + filter(aics, 
                         modelito_number == 7)$aic.weight + filter(aics, 
                         modelito_number == 8)$aic.weight + filter(aics, 
                         modelito_number == 11)$aic.weight + filter(aics, 
                         modelito_number == 14)$aic.weight

EF_p <- filter(aics, modelito_number == 1)$aic.weight +filter(aics, 
                         modelito_number == 2)$aic.weight + filter(aics, 
                         modelito_number == 3)$aic.weight + filter(aics, 
                         modelito_number == 5)$aic.weight + filter(aics, 
                         modelito_number == 6)$aic.weight + filter(aics, 
                         modelito_number == 8)$aic.weight + filter(aics, 
                         modelito_number == 10)$aic.weight + filter(aics, 
                         modelito_number == 13)$aic.weight

DI_p <- filter(aics, modelito_number == 1)$aic.weight +filter(aics, 
                         modelito_number == 2)$aic.weight + filter(aics, 
                         modelito_number == 3)$aic.weight + filter(aics, 
                         modelito_number == 4)$aic.weight + filter(aics, 
                         modelito_number == 6)$aic.weight + filter(aics, 
                         modelito_number == 7)$aic.weight + filter(aics, 
                         modelito_number == 9)$aic.weight + filter(aics, 
                         modelito_number == 12)$aic.weight
Akaike_variable_weight <- c(BW_p, GS_p, EF_p, DI_p)

Weighted_Model <- Weighted_Model_pre |> cbind(Akaike_variable_weight) 
```


Interpreting results:
```{r}
logodds_BW <- 0.447
odds_BW <- exp(logodds_BW)


logodds_GS <- 0.049
odds_GS <- exp(logodds_GS)


logodds_EF <- 0.503
odds_EF <- exp(logodds_EF)


logodds_DI <- -0.027
odds_DI <- exp(logodds_DI)

Weighted_Estimate_as_odds <- tibble(c(odds_BW, odds_GS, odds_EF, odds_DI)) |>
  rename(Weighted_Odds_Estimate = 1)
Weighted_Model_post <- Weighted_Model |> cbind(Weighted_Estimate_as_odds) |>
  dplyr::select(1, 2, 4, 3)
kable(Weighted_Model_post, digits = 3) |> 
  kable_styling(font_size = 7)
```

Holding all other variables constant, we expect that, on average, with every doubling in brain mass the odds of observed tool use behavior is higher by a factor of 1.564. 

Holding all other variables constant, we expect that, on average, with every doubling in group size the odds of observed tool use behavior is higher by a factor of 1.050. 

Holding all other variables constant, we expect that the odds of observed tool use behavior in primates that exhibit extractive foraging is higher than primates that do not by a factor of 1.654.

Holding all other variables constant, we expect that, on average, for every 1 point increase in dexterity index, the odds of observed tool use behavior are lower by a factor of 0.973.



